<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>Dailies on SMSLIT</title>
		<link>https://www.smslit.top/daily/</link>
		<description>Recent content in Dailies on SMSLIT</description>
		<generator>Hugo -- gohugo.io</generator>
		<language>en</language>
		<copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
		<lastBuildDate>Fri, 29 Mar 2019 09:36:02 +0800</lastBuildDate>
		<atom:link href="https://www.smslit.top/daily/index.xml" rel="self" type="application/rss+xml" />
		
		<item>
			<title>raywenderlich 高质量的视频教程</title>
			<link>https://www.smslit.top/daily/raywenderlich-nice/</link>
			<pubDate>Fri, 29 Mar 2019 09:36:02 +0800</pubDate>
			
			<guid>https://www.smslit.top/daily/raywenderlich-nice/</guid>
			<description>今天看到 Kevin 微博分享到 ARKit 的视频教程在免费，点开链接。啊！原来是 Raywenderlich 出品呀，十里一直关注的平台，大牛们也一直关注，他们也需要随时充个电嘛，站个队！</description>
			<content type="html"><![CDATA[<p>今天看到 <a href="https://zhowkev.in" target="_blank">Kevin</a> 微博分享到 ARKit 的视频教程在免费，点开链接。啊！原来是 <a href="https://www.raywenderlich.com" target="_blank">Raywenderlich</a> 出品呀，十里一直关注的平台，大牛们也一直关注，他们也需要随时充个电嘛，站个队！<a href="https://www.raywenderlich.com" target="_blank">Raywenderlich</a> 出品必属精品。哎，不禁想起好朋友东东经常对我的高度评价“xx出品，必属精品”，哈哈，怀念（现在分隔两地）🤪！</p>

<p>因为一直惦记 raywenderlich 今年二月份刚出的 Vapor 的教程，但是需要订阅才能查看，but 它们国外支付都一个尿性，订阅只支持信用卡，哀莫大于心死！只好求助于万能的某宝<sup class="footnote-ref" id="fnref:https-www-taobao"><a href="#fn:https-www-taobao">1</a></sup>，果真有！买了一个订阅一个月的账号，想想都知道，店主是把账号分给很多人用的，使用过程中果然，网站时不时提醒：同时只能一个人使用！💢🤮🤬</p>

<p>不爽😕！看来我要祭出我的神器了 - *Downie 3*，这是一款专门下载网页内视频的，但是一开始只能下载免费的那个视频，不用担心，神器之所以是神器，在于真的有神力🤫！Downie3 支持一种手动的模式，它会打开一个类似于浏览器的页面，只要在这个页面登陆订阅 raywenderlich 的账号，就可以为所欲为的下载解析出来的视频了，不要太 high！🤙🏻🤙🏻🤙🏻</p>
<div class="footnotes">

<hr />

<ol>
<li id="fn:https-www-taobao">之前做嵌入式开发的时候，经常与外设芯片或设备打交道，如果在网页找不到芯片或设备的相关资料，那来到 <a href="https://www.taobao.com" target="_blank">某宝</a> 轻易查到相关资料的可能性极大！ <a class="footnote-return" href="#fnref:https-www-taobao"><sup>[return]</sup></a></li>
</ol>
</div>
]]></content>
		</item>
		
		<item>
			<title>当颜控又盯上了 gruvbox</title>
			<link>https://www.smslit.top/daily/scheme-changing/</link>
			<pubDate>Wed, 27 Mar 2019 23:22:47 +0800</pubDate>
			
			<guid>https://www.smslit.top/daily/scheme-changing/</guid>
			<description>作为一个颜控无论终端还是编辑器，用了四年的 solarized 主题，一直使用 dark 系，平时敲命令写代码，都能得到统一的视觉享受，也会不遗余力的向周围的朋友和同事推</description>
			<content type="html"><![CDATA[

<p>作为一个颜控无论终端还是编辑器，用了四年的 <a href="https://ethanschoonover.com/solarized/" target="_blank">solarized</a> 主题，一直使用 dark 系，平时敲命令写代码，都能得到统一的视觉享受，也会不遗余力的向周围的朋友和同事推荐这个经典的主题，不管他们喜不喜欢，反正我是很青睐的！</p>

<figure>
    <img src="https://pichome-1254392422.cos.ap-chengdu.myqcloud.com/img/2019-03-27-%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202019-03-27%2023.38.21.png" width="450px"/> 
</figure>


<p>但是前段时间在研究 vim 的 lsp 的使用的时候，vim-lsp 插件的 README 中提到的 gruvbox 引起了我的注意。哇！一了解原来是一款相见恨晚的主题，呃。。。就这么抛弃了 solarized ，十里替他伤心！当颜控遇到好的主题 -&gt; 什么 iterm2、vim 还有 vscode 都改成了 gruvbox 主题的 dark 系。</p>

<p>用了快一周了，如 solarized 一样非常合十里的口味，眼睛很舒服，开心地搬砖！</p>

<figure>
    <img src="https://pichome-1254392422.cos.ap-chengdu.myqcloud.com/img/2019-03-27-%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202019-03-27%2023.54.20.png" width="745px"/> 
</figure>


<h2 id="也许您需要">也许您需要</h2>

<ul>
<li>iterm2: <a href="https://github.com/morhetz/gruvbox-contrib/tree/master/iterm2" target="_blank">morhetz/gruvbox-contrib/iterm2</a></li>
<li>vim: <a href="https://github.com/morhetz/gruvbox" target="_blank">morhetz/gruvbox</a></li>
<li>vscode: <a href="https://github.com/jdinhify/vscode-theme-gruvbox" target="_blank">jdinhify/vscode-theme-gruvbox</a></li>
</ul>

<h2 id="iterm2-主题配色对比">iterm2 主题配色对比</h2>

<figure>
    <img src="https://pichome-1254392422.cos.ap-chengdu.myqcloud.com/img/2019-03-27-%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202019-03-28%2000.06.03.png" width="689px"/> 
</figure>


<hr />

<figure>
    <img src="https://pichome-1254392422.cos.ap-chengdu.myqcloud.com/img/2019-03-27-%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202019-03-28%2000.06.17.png" width="689px"/> 
</figure>

]]></content>
		</item>
		
		<item>
			<title>Apple 2019 春季发布会</title>
			<link>https://www.smslit.top/daily/apple-spring-conference-2019/</link>
			<pubDate>Tue, 26 Mar 2019 12:03:44 +0800</pubDate>
			
			<guid>https://www.smslit.top/daily/apple-spring-conference-2019/</guid>
			<description>本来打算不熬夜看春季发布会的，最近太累了，而且又到了春困之时，得克制！But，睡不着了，那就委屈一下自己看看春季发布会，:-D。发布会上Ap</description>
			<content type="html"><![CDATA[<p>本来打算不熬夜看春季发布会的，最近太累了，而且又到了春困之时，得克制！But，睡不着了，那就委屈一下自己看看春季发布会，:-D。发布会上Apple 强调了 <strong>硬件-软件-服务</strong> 的铁三角战略，所以顺理成章地在发布会上发布了一个接一个服务，果然如网络上传播的消息一致！而且好像绝大部分跟我们绝大部分中国用户没多大关系嘛，boring&hellip;看了一半多竟然睡着了🤣😴。</p>

<p>早上醒来后看报道，发现睡着前竟然是看完了所有的服务发布，会面俨然成了明星见面会的时候就不小心进入梦乡了，哈哈！说笑归说笑，发布的服务涉及了人们生活的很大方面：阅读 📰、支付 💳、游戏 🎮 和 观影 🎟:</p>

<ul>
<li>Apple News+：涵盖300多种报刊或推荐文章的订阅服务</li>
<li>依托于苹果支付（Apple Pay）的苹果信用卡Apple Card</li>
<li>Apple Arcade：iOS系统内部的游戏平台</li>
<li>苹果推出两款流媒体服务：TV Channels和原创节目集合Apple TV+</li>
</ul>

<p>Apple 一直致力于 <strong>硬件-软件-服务</strong> 三方面的发展，其实有些不均衡的，软件和硬件可以说非常强大了，但是过去服务还是单一了一些，这次发布会可以说是史上最软了吧，可以看出 Apple 要大力发展服务的决心，毕竟目前来看硬件和软件的营收开始出现萎靡缩水的现象，扩展业务，发展内容分发和订阅服务势在必行！想到 Apple 这是想着法得挣我们消费者的钱，就有点那个 🤯。。。但是如果服务到位，大家还是愿意打开钱包的嘛，相信 Apple 会像硬件和软件一样会提供高质量服务，这也应该是 Apple 产品用户喜闻乐见的！</p>
]]></content>
		</item>
		
		<item>
			<title>Hello World</title>
			<link>https://www.smslit.top/daily/hello-world/</link>
			<pubDate>Mon, 25 Mar 2019 23:35:12 +0800</pubDate>
			
			<guid>https://www.smslit.top/daily/hello-world/</guid>
			<description>想象一下，很多年以后，作为一名老程序员的您决定培养一门兴趣爱好，比如书法-写毛笔，很好，您提笔一挥，纸上跃然出现 “hello， world”，</description>
			<content type="html"><![CDATA[<p>想象一下，很多年以后，作为一名老程序员的您决定培养一门兴趣爱好，比如书法-写毛笔，很好，您提笔一挥，纸上跃然出现 “hello， world”，很和谐！没毛病！</p>

<p>hello world 程序的实际表现就是在电脑屏幕（准确的说应该叫终端，很早的时候电脑屏幕只能显示字符串）上打印 “hello, world”。因为在《The C Programme Language》使用而广泛流行。</p>
<div class="highlight"><pre class="chroma"><code class="language-C" data-lang="C"><span class="n">printf</span><span class="p">(</span><span class="s">&#34;hello, world&#34;</span><span class="p">)</span></code></pre></div>
<p>因为其简洁实用，在后续出现的编程语言的第一范例几乎都是这个 hello world 程序，只是不同编程语言的相应实现，比如 python</p>
<div class="highlight"><pre class="chroma"><code class="language-Python" data-lang="Python"><span class="k">print</span><span class="p">(</span><span class="s2">&#34;hello, world&#34;</span><span class="p">)</span></code></pre></div>
<p>swift 版本：</p>
<div class="highlight"><pre class="chroma"><code class="language-Swift" data-lang="Swift"><span class="bp">print</span><span class="p">(</span><span class="s">&#34;hello, world&#34;</span><span class="p">)</span></code></pre></div>
<p>你好，世界！很好的寓意，你好，欢迎你来到一个新的世界，猩球！</p>
]]></content>
		</item>
		
		<item>
			<title>人生苦短，我用 VS Code</title>
			<link>https://www.smslit.top/daily/vsc-from-vim/</link>
			<pubDate>Sun, 24 Mar 2019 23:41:45 +0800</pubDate>
			
			<guid>https://www.smslit.top/daily/vsc-from-vim/</guid>
			<description>这些天配置 vim 的 LSP1，主要是针对 python 和 Swift，LSP 确实让人很激动！但兴奋之余，对于 vim 的配置，简直可以怀疑人生，总有各种不满意的地方，像</description>
			<content type="html"><![CDATA[<p>这些天配置 vim 的 LSP<sup class="footnote-ref" id="fnref:Language-Server"><a href="#fn:Language-Server">1</a></sup>，主要是针对 python 和 Swift，LSP 确实让人很激动！但兴奋之余，对于 vim 的配置，简直可以怀疑人生，总有各种不满意的地方，像十里这么追求完美的人怎么能过去，试了各种各样的方法去弥补不满意的地方，但青春耗不起呀！</p>

<p>而 vscode 只需安装一个插件就能搞定，轻松到怀疑人生，而且除了 LSP 的完美实现，同样拥有完备的 DAP<sup class="footnote-ref" id="fnref:Debug-Adapter-Pr"><a href="#fn:Debug-Adapter-Pr">2</a></sup> 支持，简直不要太轻松！感觉整合世界都和平了！因为习惯了 vim 的操作方式，所以尝试了 vim 的插件，总是达不到原生 vim 的全键盘操作的连贯性，索性奔着 vscode 的良好生态，逐步适应 vscode 的使用套路，虽然不能全键盘操作，但依旧很 high 幺！时间都花在搬砖上就可以了！</p>

<p>使用 VS Code 从嵌入式开发，到前端开发和后端开发，都能得到统一的开发体验，编码、调试、补全、语法分析、重构、跳转等等，总结下来就是技术栈过渡和使用都很顺畅，此刻尽享丝滑！</p>

<p>人生苦短，我用 VS Code！</p>
<div class="footnotes">

<hr />

<ol>
<li id="fn:Language-Server"><a href="https://microsoft.github.io/language-server-protocol/" target="_blank">Language Server Protocol</a> <a class="footnote-return" href="#fnref:Language-Server"><sup>[return]</sup></a></li>
<li id="fn:Debug-Adapter-Pr"><a href="https://microsoft.github.io/debug-adapter-protocol/" target="_blank">Debug Adapter Protocol</a> <a class="footnote-return" href="#fnref:Debug-Adapter-Pr"><sup>[return]</sup></a></li>
</ol>
</div>
]]></content>
		</item>
		
		<item>
			<title>python 程序猿有意思的自称</title>
			<link>https://www.smslit.top/daily/pythonist/</link>
			<pubDate>Sat, 23 Mar 2019 20:37:01 +0800</pubDate>
			
			<guid>https://www.smslit.top/daily/pythonist/</guid>
			<description>今天看了一篇有意思的文章《我不认识Pythoner这种开发者》 ，涨姿势了！我是不会告诉你们我立马把 Me 页面的描述改了的🙈!作者的讨论其实是有意</description>
			<content type="html"><![CDATA[<p>今天看了一篇有意思的文章<a href="https://zhuanlan.zhihu.com/p/26832983" target="_blank">《我不认识Pythoner这种开发者》</a> ，涨姿势了！我是不会告诉你们我立马把 Me 页面的描述改了的🙈!作者的讨论其实是有意义的，不得不承认，包括十里和很多国人使用的英语偏向 <code>Chinglish</code><sup class="footnote-ref" id="fnref:Chinglish-is-sla"><a href="#fn:Chinglish-is-sla">1</a></sup>，严重的话，母语是英语的歪果仁会很费解我们的 <strong>Chinglish</strong>，所以还是希望能多看到这样的文章，以免造成与他们沟通上的障碍（主要是不能露怯呀，维护国人形象！）</p>

<p>PS：确实得好好学习英语，最起码互联网行业的这些得了解多一点！</p>
<div class="footnotes">

<hr />

<ol>
<li id="fn:Chinglish-is-sla">Chinglish is slang for spoken or written English language that is influenced by the Chinese language. - <a href="https://en.wikipedia.org/wiki/Chinglish" target="_blank">Chinglish</a> <a class="footnote-return" href="#fnref:Chinglish-is-sla"><sup>[return]</sup></a></li>
</ol>
</div>
]]></content>
		</item>
		
		<item>
			<title>常用命令知多少</title>
			<link>https://www.smslit.top/daily/command-analysis/</link>
			<pubDate>Fri, 22 Mar 2019 22:51:30 +0800</pubDate>
			
			<guid>https://www.smslit.top/daily/command-analysis/</guid>
			<description>今天看到一个好玩的命令，可以统计使用命令历史中次数前十的，命令如下： history | awk &amp;#39;{CMD[$2]++;count++;} END { for (a in CMD )print CMD[ a ]&amp;#34; &amp;#34;CMD[ a ]/count*100 &amp;#34;% &amp;#34; a }&amp;#39; | grep -v &amp;#34;./&amp;#34; | column -c3 -s &amp;#34; &amp;#34; -t |sort -nr | nl</description>
			<content type="html"><![CDATA[<p>今天看到一个好玩的命令，可以统计使用命令历史中次数前十的，命令如下：</p>
<div class="highlight"><pre class="chroma"><code class="language-Bash" data-lang="Bash"><span class="nb">history</span> <span class="p">|</span> awk <span class="s1">&#39;{CMD[$2]++;count++;} END { for (a in CMD )print CMD[ a ]&#34; &#34;CMD[ a ]/count*100 &#34;% &#34; a }&#39;</span> <span class="p">|</span> grep -v <span class="s2">&#34;./&#34;</span> <span class="p">|</span> column -c3 -s <span class="s2">&#34; &#34;</span> -t <span class="p">|</span>sort -nr <span class="p">|</span> nl <span class="p">|</span> head -n10</code></pre></div>
<p>十里的运行结果是：</p>
<div class="highlight"><pre class="chroma"><code class="language-Bash" data-lang="Bash">➜  <span class="nb">history</span> <span class="p">|</span> awk <span class="s1">&#39;{CMD[$2]++;count++;} END { for (a in CMD )print CMD[ a ]&#34; &#34;CMD[ a ]/count*100 &#34;% &#34; a }&#39;</span> <span class="p">|</span> grep -v <span class="s2">&#34;./&#34;</span> <span class="p">|</span> column -c3 -s <span class="s2">&#34; &#34;</span> -t <span class="p">|</span>sort -nr <span class="p">|</span> nl <span class="p">|</span> head -n10
     <span class="m">1</span>	<span class="m">1645</span>  <span class="m">16</span>.4451%   vim
     <span class="m">2</span>	<span class="m">1061</span>  <span class="m">10</span>.6068%   git
     <span class="m">3</span>	<span class="m">904</span>   <span class="m">9</span>.03729%   <span class="nb">cd</span>
     <span class="m">4</span>	<span class="m">623</span>   <span class="m">6</span>.22813%   pack
     <span class="m">5</span>	<span class="m">346</span>   <span class="m">3</span>.45896%   pipenv
     <span class="m">6</span>	<span class="m">343</span>   <span class="m">3</span>.42897%   ll
     <span class="m">7</span>	<span class="m">340</span>   <span class="m">3</span>.39898%   hugo
     <span class="m">8</span>	<span class="m">316</span>   <span class="m">3</span>.15905%   rm
     <span class="m">9</span>	<span class="m">257</span>   <span class="m">2</span>.56923%   brew
    <span class="m">10</span>	<span class="m">208</span>   <span class="m">2</span>.07938%   python3</code></pre></div>
<p>使用最多的是 vim，可以看出对 vim 是真爱呀，不知您的结果是什么样的！</p>
]]></content>
		</item>
		
		<item>
			<title>意外的惊喜: vim 有 lsp 加持</title>
			<link>https://www.smslit.top/daily/languange-server-protocol/</link>
			<pubDate>Thu, 21 Mar 2019 23:22:56 +0800</pubDate>
			
			<guid>https://www.smslit.top/daily/languange-server-protocol/</guid>
			<description>昨天朋友邮件分享给十里一个链接，不要太优秀，那就是 LSP ，什么是 LSP？ The Language Server protocol is used between a tool (the client) and a language smartness provider (the server) to integrate features like auto complete, go to definition, find all references and alike into the tool. 为</description>
			<content type="html"><![CDATA[<p>昨天朋友邮件分享给十里一个链接，不要太优秀，那就是 LSP ，什么是 LSP？</p>

<blockquote>
<p>The Language Server protocol is used between a tool (the client) and a language smartness provider (the server) to integrate features like auto complete, go to definition, find all references and alike into the tool.</p>
</blockquote>

<p>为什么会存在这个东西，算了，我也不搬运别人的话了，这里是<a href="https://langserver.org/" target="_blank">传送门</a>。简单来说，有了它，能实现语言服务和编辑器之间协作的大一统，LSP 打通了 LS 与编辑器，那么像上古神器 vim 以及神的编辑器 emacs&hellip;..只要是编辑器有 LSP 的加持都能轻松实现代码补全、定义和声明跳转、语法检查、代码格式化、重命名(用于重构)以及查看引用等，简直不要太 high！因为朋友和我都是使用 vim，所以花了一早上便研究了一下 python 和 swift 的 LSP 配置和使用。</p>

<ul>
<li><a href="https://github.com/prabirshrestha/vim-lsp" target="_blank">vim-lsp</a></li>
</ul>

<p>vim 的 LSP 配置看上面这个 vim-lsp 就够了， README 和 wiki 中一定可以找到常用编程语言的支持。</p>

<p>不过，还是存在一些问题的，我配置了 python 和 swift 两种语言的 LSP，各种跳转很优秀，语法检查也不错，就是代码补全和代码格式化有些问题！不知道是不是我的 vim 的问题还是什么，补全弹窗出现的慢，尤其是 swift 的补全，竟然会卡代码，我晕～ python 的代码格式化简直不要太迷幻，总之套路不详！python 的代码补全、语法检查和代码格式化又退回到了原来的插件组合和配置，有时间再研究一下 vim-lsp &hellip;</p>

<ul>
<li>python 补全: <a href="https://github.com/maralla/completor.vim" target="_blank">completor</a> + jedi</li>
<li>python 语法检查和代码格式化: <a href="https://github.com/w0rp/ale" target="_blank">ale</a> + pylint 和 autopep8</li>
<li>python 代码跳转、查看引用和重构: <a href="https://github.com/prabirshrestha/vim-lsp" target="_blank">vim-lsp</a> 和 <a href="https://github.com/prabirshrestha/async.vim" target="_blank">async.vim</a> + <a href="https://github.com/palantir/python-language-server" target="_blank">python language server</a></li>
</ul>

<p>感觉也有可能是 python 的 LS 工具的原因，后面尝试一下微软的 <a href="ihttps://github.com/Microsoft/python-language-server" target="_blank">python language server</a>!</p>
]]></content>
		</item>
		
		<item>
			<title>懵逼状态</title>
			<link>https://www.smslit.top/daily/question-mark-fill-head/</link>
			<pubDate>Wed, 20 Mar 2019 23:06:11 +0800</pubDate>
			
			<guid>https://www.smslit.top/daily/question-mark-fill-head/</guid>
			<description>今天学习了下唐老师的《Vue 开发实战》已更新的视频课，我的天，虽然已经粗略看了一遍 Vue 的官方教程，但是担心的事情还是发生了！在看 Vue 官方教程的时</description>
			<content type="html"><![CDATA[<p>今天学习了下唐老师的《Vue 开发实战》已更新的视频课，我的天，虽然已经粗略看了一遍 Vue 的官方教程，但是担心的事情还是发生了！在看 Vue 官方教程的时候，就发现概念很多，脑袋塞得满满的，俨然成了一个先进先出的队列，很早看过的还是会忘记一些，果然填鸭式地学习（爆发式吸收）还是挺熬人的，可能是因为唐老师的课干货比较多，很精炼，但是很多还是不能立即明白和吸收，还是得课后好好补课，看教程的过程中经常是下面的状态：</p>

<figure>
    <img src="https://pichome-1254392422.cos.ap-chengdu.myqcloud.com/img/2019-03-21-th.jpeg" width="200px"/> 
</figure>


<p>革命尚未成功，同志仍需努力！</p>
]]></content>
		</item>
		
		<item>
			<title>甘作小众</title>
			<link>https://www.smslit.top/daily/be-a-small-potato/</link>
			<pubDate>Tue, 19 Mar 2019 22:31:50 +0800</pubDate>
			
			<guid>https://www.smslit.top/daily/be-a-small-potato/</guid>
			<description>今天看知乎想法有人说： 从统计数据上看，在网上发『干货』远没有发『鸡汤』来得受欢迎。 拿知乎来说，干货几十个赞，鸡汤几百上千个赞。慢慢也就没人发</description>
			<content type="html"><![CDATA[<p>今天看知乎想法有人说：</p>

<blockquote>
<p>从统计数据上看，在网上发『干货』远没有发『鸡汤』来得受欢迎。</p>

<p>拿知乎来说，干货几十个赞，鸡汤几百上千个赞。慢慢也就没人发干货了。</p>
</blockquote>

<p>其实，在乎这些干什么，一定要追求流量吗？流量很重要，但也不是唯一的王道嘛！十里觉得，做好小众，沉心打造自己一番小天地，别人看到如果喜欢那很好，就一起交流嘛，如果不以为然，也不要放在心上，坚持做好自己。不管你看与不看，我都在！</p>

<p>就是这样！安静的打磨自己&hellip;</p>
]]></content>
		</item>
		
	</channel>
</rss>
