<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>Dailies on SMSLIT</title>
		<link>https://www.smslit.top/daily/</link>
		<description>Recent content in Dailies on SMSLIT</description>
		<generator>Hugo -- gohugo.io</generator>
		<language>en</language>
		<copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
		<lastBuildDate>Mon, 25 Mar 2019 23:35:12 +0800</lastBuildDate>
		<atom:link href="https://www.smslit.top/daily/index.xml" rel="self" type="application/rss+xml" />
		
		<item>
			<title>Hello World</title>
			<link>https://www.smslit.top/daily/hello-world/</link>
			<pubDate>Mon, 25 Mar 2019 23:35:12 +0800</pubDate>
			
			<guid>https://www.smslit.top/daily/hello-world/</guid>
			<description>想象一下，很多年以后，作为一名老程序员的您决定培养一门兴趣爱好，比如书法-写毛笔，很好，您提笔一挥，纸上跃然出现 “hello， world”，</description>
			<content type="html"><![CDATA[<p>想象一下，很多年以后，作为一名老程序员的您决定培养一门兴趣爱好，比如书法-写毛笔，很好，您提笔一挥，纸上跃然出现 “hello， world”，很和谐！没毛病！</p>

<p>hello world 程序的实际表现就是在电脑屏幕（准确的说应该叫终端，很早的时候电脑屏幕只能显示字符串）上打印 “hello, world”。因为在《The C Programme Language》使用而广泛流行。</p>
<div class="highlight"><pre class="chroma"><code class="language-C" data-lang="C"><span class="n">printf</span><span class="p">(</span><span class="s">&#34;hello, world&#34;</span><span class="p">)</span></code></pre></div>
<p>因为其简洁实用，在后续出现的编程语言的第一范例几乎都是这个 hello world 程序，只是不同编程语言的相应实现，比如 python</p>
<div class="highlight"><pre class="chroma"><code class="language-Python" data-lang="Python"><span class="k">print</span><span class="p">(</span><span class="s2">&#34;hello, world&#34;</span><span class="p">)</span></code></pre></div>
<p>swift 版本：</p>
<div class="highlight"><pre class="chroma"><code class="language-Swift" data-lang="Swift"><span class="bp">print</span><span class="p">(</span><span class="s">&#34;hello, world&#34;</span><span class="p">)</span></code></pre></div>
<p>你好，世界！很好的寓意，你好，欢迎你来到一个新的世界，猩球！</p>
]]></content>
		</item>
		
		<item>
			<title>人生苦短，我用 VS Code</title>
			<link>https://www.smslit.top/daily/vsc-from-vim/</link>
			<pubDate>Sun, 24 Mar 2019 23:41:45 +0800</pubDate>
			
			<guid>https://www.smslit.top/daily/vsc-from-vim/</guid>
			<description>这些天配置 vim 的 LSP1，主要是针对 python 和 Swift，LSP 确实让人很激动！但兴奋之余，对于 vim 的配置，简直可以怀疑人生，总有各种不满意的地方，像</description>
			<content type="html"><![CDATA[<p>这些天配置 vim 的 LSP<sup class="footnote-ref" id="fnref:Language-Server"><a href="#fn:Language-Server">1</a></sup>，主要是针对 python 和 Swift，LSP 确实让人很激动！但兴奋之余，对于 vim 的配置，简直可以怀疑人生，总有各种不满意的地方，像十里这么追求完美的人怎么能过去，试了各种各样的方法去弥补不满意的地方，但青春耗不起呀！</p>

<p>而 vscode 只需安装一个插件就能搞定，轻松到怀疑人生，而且除了 LSP 的完美实现，同样拥有完备的 DAP<sup class="footnote-ref" id="fnref:Debug-Adapter-Pr"><a href="#fn:Debug-Adapter-Pr">2</a></sup> 支持，简直不要太轻松！感觉整合世界都和平了！因为习惯了 vim 的操作方式，所以尝试了 vim 的插件，总是达不到原生 vim 的全键盘操作的连贯性，索性奔着 vscode 的良好生态，逐步适应 vscode 的使用套路，虽然不能全键盘操作，但依旧很 high 幺！时间都花在搬砖上就可以了！</p>

<p>使用 VS Code 从嵌入式开发，到前端开发和后端开发，都能得到统一的开发体验，编码、调试、补全、语法分析、重构、跳转等等，总结下来就是技术栈过渡和使用都很顺畅，此刻尽享丝滑！</p>

<p>人生苦短，我用 VS Code！</p>
<div class="footnotes">

<hr />

<ol>
<li id="fn:Language-Server"><a href="https://microsoft.github.io/language-server-protocol/" target="_blank">Language Server Protocol</a> <a class="footnote-return" href="#fnref:Language-Server"><sup>[return]</sup></a></li>
<li id="fn:Debug-Adapter-Pr"><a href="https://microsoft.github.io/debug-adapter-protocol/" target="_blank">Debug Adapter Protocol</a> <a class="footnote-return" href="#fnref:Debug-Adapter-Pr"><sup>[return]</sup></a></li>
</ol>
</div>
]]></content>
		</item>
		
		<item>
			<title>python 程序猿有意思的自称</title>
			<link>https://www.smslit.top/daily/pythonist/</link>
			<pubDate>Sat, 23 Mar 2019 20:37:01 +0800</pubDate>
			
			<guid>https://www.smslit.top/daily/pythonist/</guid>
			<description>今天看了一篇有意思的文章《我不认识Pythoner这种开发者》 ，涨姿势了！我是不会告诉你们我立马把 Me 页面的描述改了的🙈!作者的讨论其实是有意</description>
			<content type="html"><![CDATA[<p>今天看了一篇有意思的文章<a href="https://zhuanlan.zhihu.com/p/26832983" target="_blank">《我不认识Pythoner这种开发者》</a> ，涨姿势了！我是不会告诉你们我立马把 Me 页面的描述改了的🙈!作者的讨论其实是有意义的，不得不承认，包括十里和很多国人使用的英语偏向 <code>Chinglish</code><sup class="footnote-ref" id="fnref:Chinglish-is-sla"><a href="#fn:Chinglish-is-sla">1</a></sup>，严重的话，母语是英语的歪果仁会很费解我们的 <strong>Chinglish</strong>，所以还是希望能多看到这样的文章，以免造成与他们沟通上的障碍（主要是不能露怯呀，维护国人形象！）</p>

<p>PS：确实得好好学习英语，最起码互联网行业的这些得了解多一点！</p>
<div class="footnotes">

<hr />

<ol>
<li id="fn:Chinglish-is-sla">Chinglish is slang for spoken or written English language that is influenced by the Chinese language. - <a href="https://en.wikipedia.org/wiki/Chinglish" target="_blank">Chinglish</a> <a class="footnote-return" href="#fnref:Chinglish-is-sla"><sup>[return]</sup></a></li>
</ol>
</div>
]]></content>
		</item>
		
		<item>
			<title>常用命令知多少</title>
			<link>https://www.smslit.top/daily/command-analysis/</link>
			<pubDate>Fri, 22 Mar 2019 22:51:30 +0800</pubDate>
			
			<guid>https://www.smslit.top/daily/command-analysis/</guid>
			<description>今天看到一个好玩的命令，可以统计使用命令历史中次数前十的，命令如下： history | awk &amp;#39;{CMD[$2]++;count++;} END { for (a in CMD )print CMD[ a ]&amp;#34; &amp;#34;CMD[ a ]/count*100 &amp;#34;% &amp;#34; a }&amp;#39; | grep -v &amp;#34;./&amp;#34; | column -c3 -s &amp;#34; &amp;#34; -t |sort -nr | nl</description>
			<content type="html"><![CDATA[<p>今天看到一个好玩的命令，可以统计使用命令历史中次数前十的，命令如下：</p>
<div class="highlight"><pre class="chroma"><code class="language-Bash" data-lang="Bash"><span class="nb">history</span> <span class="p">|</span> awk <span class="s1">&#39;{CMD[$2]++;count++;} END { for (a in CMD )print CMD[ a ]&#34; &#34;CMD[ a ]/count*100 &#34;% &#34; a }&#39;</span> <span class="p">|</span> grep -v <span class="s2">&#34;./&#34;</span> <span class="p">|</span> column -c3 -s <span class="s2">&#34; &#34;</span> -t <span class="p">|</span>sort -nr <span class="p">|</span> nl <span class="p">|</span> head -n10</code></pre></div>
<p>十里的运行结果是：</p>
<div class="highlight"><pre class="chroma"><code class="language-Bash" data-lang="Bash">➜  <span class="nb">history</span> <span class="p">|</span> awk <span class="s1">&#39;{CMD[$2]++;count++;} END { for (a in CMD )print CMD[ a ]&#34; &#34;CMD[ a ]/count*100 &#34;% &#34; a }&#39;</span> <span class="p">|</span> grep -v <span class="s2">&#34;./&#34;</span> <span class="p">|</span> column -c3 -s <span class="s2">&#34; &#34;</span> -t <span class="p">|</span>sort -nr <span class="p">|</span> nl <span class="p">|</span> head -n10
     <span class="m">1</span>	<span class="m">1645</span>  <span class="m">16</span>.4451%   vim
     <span class="m">2</span>	<span class="m">1061</span>  <span class="m">10</span>.6068%   git
     <span class="m">3</span>	<span class="m">904</span>   <span class="m">9</span>.03729%   <span class="nb">cd</span>
     <span class="m">4</span>	<span class="m">623</span>   <span class="m">6</span>.22813%   pack
     <span class="m">5</span>	<span class="m">346</span>   <span class="m">3</span>.45896%   pipenv
     <span class="m">6</span>	<span class="m">343</span>   <span class="m">3</span>.42897%   ll
     <span class="m">7</span>	<span class="m">340</span>   <span class="m">3</span>.39898%   hugo
     <span class="m">8</span>	<span class="m">316</span>   <span class="m">3</span>.15905%   rm
     <span class="m">9</span>	<span class="m">257</span>   <span class="m">2</span>.56923%   brew
    <span class="m">10</span>	<span class="m">208</span>   <span class="m">2</span>.07938%   python3</code></pre></div>
<p>使用最多的是 vim，可以看出对 vim 是真爱呀，不知您的结果是什么样的！</p>
]]></content>
		</item>
		
		<item>
			<title>意外的惊喜: vim 有 lsp 加持</title>
			<link>https://www.smslit.top/daily/languange-server-protocol/</link>
			<pubDate>Thu, 21 Mar 2019 23:22:56 +0800</pubDate>
			
			<guid>https://www.smslit.top/daily/languange-server-protocol/</guid>
			<description>昨天朋友邮件分享给十里一个链接，不要太优秀，那就是 LSP ，什么是 LSP？ The Language Server protocol is used between a tool (the client) and a language smartness provider (the server) to integrate features like auto complete, go to definition, find all references and alike into the tool. 为</description>
			<content type="html"><![CDATA[<p>昨天朋友邮件分享给十里一个链接，不要太优秀，那就是 LSP ，什么是 LSP？</p>

<blockquote>
<p>The Language Server protocol is used between a tool (the client) and a language smartness provider (the server) to integrate features like auto complete, go to definition, find all references and alike into the tool.</p>
</blockquote>

<p>为什么会存在这个东西，算了，我也不搬运别人的话了，这里是<a href="https://langserver.org/" target="_blank">传送门</a>。简单来说，有了它，能实现语言服务和编辑器之间协作的大一统，LSP 打通了 LS 与编辑器，那么像上古神器 vim 以及神的编辑器 emacs&hellip;..只要是编辑器有 LSP 的加持都能轻松实现代码补全、定义和声明跳转、语法检查、代码格式化、重命名(用于重构)以及查看引用等，简直不要太 high！因为朋友和我都是使用 vim，所以花了一早上便研究了一下 python 和 swift 的 LSP 配置和使用。</p>

<ul>
<li><a href="https://github.com/prabirshrestha/vim-lsp" target="_blank">vim-lsp</a></li>
</ul>

<p>vim 的 LSP 配置看上面这个 vim-lsp 就够了， README 和 wiki 中一定可以找到常用编程语言的支持。</p>

<p>不过，还是存在一些问题的，我配置了 python 和 swift 两种语言的 LSP，各种跳转很优秀，语法检查也不错，就是代码补全和代码格式化有些问题！不知道是不是我的 vim 的问题还是什么，补全弹窗出现的慢，尤其是 swift 的补全，竟然会卡代码，我晕～ python 的代码格式化简直不要太迷幻，总之套路不详！python 的代码补全、语法检查和代码格式化又退回到了原来的插件组合和配置，有时间再研究一下 vim-lsp &hellip;</p>

<ul>
<li>python 补全: <a href="https://github.com/maralla/completor.vim" target="_blank">completor</a> + jedi</li>
<li>python 语法检查和代码格式化: <a href="https://github.com/w0rp/ale" target="_blank">ale</a> + pylint 和 autopep8</li>
<li>python 代码跳转、查看引用和重构: <a href="https://github.com/prabirshrestha/vim-lsp" target="_blank">vim-lsp</a> 和 <a href="https://github.com/prabirshrestha/async.vim" target="_blank">async.vim</a> + <a href="https://github.com/palantir/python-language-server" target="_blank">python language server</a></li>
</ul>

<p>感觉也有可能是 python 的 LS 工具的原因，后面尝试一下微软的 <a href="ihttps://github.com/Microsoft/python-language-server" target="_blank">python language server</a>!</p>
]]></content>
		</item>
		
		<item>
			<title>懵逼状态</title>
			<link>https://www.smslit.top/daily/question-mark-fill-head/</link>
			<pubDate>Wed, 20 Mar 2019 23:06:11 +0800</pubDate>
			
			<guid>https://www.smslit.top/daily/question-mark-fill-head/</guid>
			<description>今天学习了下唐老师的《Vue 开发实战》已更新的视频课，我的天，虽然已经粗略看了一遍 Vue 的官方教程，但是担心的事情还是发生了！在看 Vue 官方教程的时</description>
			<content type="html"><![CDATA[<p>今天学习了下唐老师的《Vue 开发实战》已更新的视频课，我的天，虽然已经粗略看了一遍 Vue 的官方教程，但是担心的事情还是发生了！在看 Vue 官方教程的时候，就发现概念很多，脑袋塞得满满的，俨然成了一个先进先出的队列，很早看过的还是会忘记一些，果然填鸭式地学习（爆发式吸收）还是挺熬人的，可能是因为唐老师的课干货比较多，很精炼，但是很多还是不能立即明白和吸收，还是得课后好好补课，看教程的过程中经常是下面的状态：</p>

<figure>
    <img src="https://pichome-1254392422.cos.ap-chengdu.myqcloud.com/img/2019-03-21-th.jpeg" width="200px"/> 
</figure>


<p>革命尚未成功，同志仍需努力！</p>
]]></content>
		</item>
		
		<item>
			<title>甘作小众</title>
			<link>https://www.smslit.top/daily/be-a-small-potato/</link>
			<pubDate>Tue, 19 Mar 2019 22:31:50 +0800</pubDate>
			
			<guid>https://www.smslit.top/daily/be-a-small-potato/</guid>
			<description>今天看知乎想法有人说： 从统计数据上看，在网上发『干货』远没有发『鸡汤』来得受欢迎。 拿知乎来说，干货几十个赞，鸡汤几百上千个赞。慢慢也就没人发</description>
			<content type="html"><![CDATA[<p>今天看知乎想法有人说：</p>

<blockquote>
<p>从统计数据上看，在网上发『干货』远没有发『鸡汤』来得受欢迎。</p>

<p>拿知乎来说，干货几十个赞，鸡汤几百上千个赞。慢慢也就没人发干货了。</p>
</blockquote>

<p>其实，在乎这些干什么，一定要追求流量吗？流量很重要，但也不是唯一的王道嘛！十里觉得，做好小众，沉心打造自己一番小天地，别人看到如果喜欢那很好，就一起交流嘛，如果不以为然，也不要放在心上，坚持做好自己。不管你看与不看，我都在！</p>

<p>就是这样！安静的打磨自己&hellip;</p>
]]></content>
		</item>
		
		<item>
			<title>投怀 Vue</title>
			<link>https://www.smslit.top/daily/vue-vue-vue/</link>
			<pubDate>Mon, 18 Mar 2019 21:21:06 +0800</pubDate>
			
			<guid>https://www.smslit.top/daily/vue-vue-vue/</guid>
			<description>说来太巧了，从前天晚上开始看 Vue 官网教程学习 Vue，今天就发现卖桃君在公众号发了宣布极客时间新推出 Vue 视频教程进行大甩卖的文章，只感叹这就是一个</description>
			<content type="html"><![CDATA[<p>说来太巧了，从前天晚上开始看 Vue 官网教程学习 Vue，今天就发现卖桃君在公众号发了宣布极客时间新推出 Vue 视频教程进行大甩卖的文章，只感叹这就是一个“阴谋”！因为之前订阅了戴铭老师的《iOS 开发高手课》的教程，感受到了极客时间对于教程质质量的把控，所以应自己所需，立马剁手订阅了唐金州老师<sup class="footnote-ref" id="fnref:Ant-Design-Vue"><a href="#fn:Ant-Design-Vue">1</a></sup>的《Vue 开发实战》的课程，可惜甩卖活动不能使用之前的 30 刀的券，但无所谓了，优良的知识是无价的，这些投资是有必要的！如果您也想了解一下课程，扫码就看：</p>

<figure>
    <img src="https://pichome-1254392422.cos.ap-chengdu.myqcloud.com/img/2019-03-18-06ffd0319ac755538a585fa74e9e035e.jpg" width="300px"/> 
</figure>

<div class="footnotes">

<hr />

<ol>
<li id="fn:Ant-Design-Vue">一点资讯前端技术专家，Ant Design Vue 的作者 <a class="footnote-return" href="#fnref:Ant-Design-Vue"><sup>[return]</sup></a></li>
</ol>
</div>
]]></content>
		</item>
		
		<item>
			<title>头号玩家</title>
			<link>https://www.smslit.top/daily/ready-player-one/</link>
			<pubDate>Sun, 17 Mar 2019 22:55:12 +0800</pubDate>
			
			<guid>https://www.smslit.top/daily/ready-player-one/</guid>
			<description>昨天和今天终于看完了斯皮尔伯格的新电影《头号玩家》，也不算新电影了，因为上映了都一年多了，尴尬！两个多小时的电影花两天看完不过分吧，还是说说</description>
			<content type="html"><![CDATA[<p>昨天和今天终于看完了斯皮尔伯格的新电影《头号玩家》，也不算新电影了，因为上映了都一年多了，尴尬！两个多小时的电影花两天看完不过分吧，还是说说观后感吧！这部电影应该是会给某一代人带来猛烈回忆杀的，很羞愧的说，只有红白机游戏和一些动漫形象对十里有点&rdquo;伤害&rdquo;，童年记忆嘛，电影里那些像素游戏也没怎么玩过😅！十里对电影中那句 “The reality is the only thing that&rsquo;s real” 记忆尤为深刻，现实是唯一的真实！虚幻之外，游戏之外，身边的人、物、景才是最真实的，拥抱生活，感受生活的人情感和状态才会是饱满的，这又让十里想到专注之余能自由穿梭于自己的世界与现实世界是多么的重要！</p>

<p>除了电影特效带来的快感，十里还惊叹于男主是那么的了解绿洲的缔造者，每个细节的那种默契跨越了年龄，也跨越了虚拟与现实，时间与空间都无法掩盖两个人的相同关注点！那么世界上真的会存在如此了解你并与你很合拍的人吗？</p>
]]></content>
		</item>
		
		<item>
			<title>关于 macOS 开发知识分享</title>
			<link>https://www.smslit.top/daily/macOS-dev-plan-change/</link>
			<pubDate>Sat, 16 Mar 2019 23:56:00 +0800</pubDate>
			
			<guid>https://www.smslit.top/daily/macOS-dev-plan-change/</guid>
			<description>已经有好些天没有发 macOS 开发的经验分享了，考虑到现阶段时间的紧俏，更改知识分享周期为 weekly。其实每一篇分享背后，十里要做很多工作，十里想着</description>
			<content type="html"><![CDATA[<p>已经有好些天没有发 macOS 开发的经验分享了，考虑到现阶段时间的紧俏，更改知识分享周期为 weekly。其实每一篇分享背后，十里要做很多工作，十里想着要尽量能说清楚做什么，怎么做，为什么（what-how-why），能力有限，时间就会占用很多，毕竟还要做很多其他事情，索性 《macOS 开发》(博客和知乎专栏)就成了《macOS Development weekly》，哈哈！</p>

<p>关于经验分享，还是想尽量时新，参照网上老旧的开发经验也要关注和探索技术的更新，就比如十里下一篇要讲的本地通知，网上提供的方法大多是马上要废弃的方式，阅读 apple 官方关于 Notification 的开发资料才知道未来 API 的发展方向，去年 WWDC 已经很清楚说了 iOS 应用移植到 macOS 的计划，作为开发者也应注意到了 apple 正努力融合 iOS 和 macOS 开发接口，得时刻关注动向，才能让自己的作品与时俱进！知识经验的分享也便能时新！</p>
]]></content>
		</item>
		
	</channel>
</rss>
